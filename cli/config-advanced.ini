[target]
# file:
# A line-delimited input file of hostnames
# Don't include any ports in input, that is done in the http[s?]_ports options below
# ex:
# google.com
# subdomain.facebook.com
file = targets.txt

# Port options accept the following syntax:
# CSV: 80,81,82
# Range: 80-90
# Comment either of these out to exlude them, but at least one is required
http_ports = 80
https_ports = 443

[options]
dont_request_images = false
dont_request_scripts = false

#use_eyeballer = false

# eyeballer_api_url:
#  the url to the eyeballer API
#  you must start eyeballer first yourself
#eyeballer_api_url = http://localhost:3000

# eyeballer_confidence_threshold:
#   visibility will store screenshots in a respective label folder if eyeballer is confident in its result.
#   by default in eyeballer, any image scoring >0.5 will be marked "confident" as eyeballer, but it can also be configured on eyeballer's side
#   a threshold defined here will override eyeballer's configured confidence threshold
#eyeballer_confidence_threshold = 0.5


[workers]
# use_local:
#   if true, include the host running this script in the worker pool
#   if omitted, defaults to true
use_local = true 

# local_tabs:
#   override default number of worker tabs to use on local worker)
#   default if not defined: (logical cpu count)*2
#local_tabs = 1

use_remote_workers = true
remote_worker_ssh_key = "~/.ssh/id_rsa"

# workers[]:
#   a list of hosts that will be SSH'd to and have port 9222 forwarded locally.
#   these instance will be used to distribute screenshot jobs
#   syntax: name|method|url:port|num_workers|browser_timeout_in_ms
#     name: the friendly name for the worker, can be anything
#     method: either ssh or http.
#       - ssh: use the worker dockerfile in this repository to create a container anywhere you want and connect to the remote chrome debug port securely over ssh 
#       - http: (INSECURE): just connect straight to the chrome debug url over http, A BAD IDEA, it is completely unauthenticated, but maybe useful if you're on a private network
#     num_workers: number of tabs to use on the remote pc. recommended: (logical cpu count * 2)
#     browser_timeout_in_ms: the
#     -- all fields required --
workers[] = test-ssh|ssh|root@localhost:40022|4|10000
#workers[] = test-http|http|http://localhost:9222|4|10000
